{"ast":null,"code":"import { auth, db } from \"../firebase\";\n\nclass AuthContext {\n  constructor() {\n    this.auth = void 0;\n    this.db = void 0;\n    this.auth = auth;\n    this.db = db;\n  }\n\n  signup(email, password) {\n    return this.auth.createUserWithEmailAndPassword(email, password).catch(error => {\n      const errorMessage = error.message;\n      console.log(errorMessage);\n    });\n  }\n\n  login(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password).catch(error => {\n      const errorMessage = error.message;\n      console.log(errorMessage);\n    });\n  }\n\n  logout() {\n    return this.auth.signOut().catch(error => {\n      const errorMessage = error.message;\n      console.log(errorMessage);\n    });\n  }\n\n  resetPassword(email) {\n    return this.auth.sendPasswordResetEmail(email).catch(error => {\n      const errorMessage = error.message;\n      console.log(errorMessage);\n    });\n  } // updateEmail(email) {\n  //     return currentUser.updateEmail(email)\n  // }\n  // updatePassword(password) {\n  //     return currentUser.updatePassword(password)\n  // }\n\n\n  isInitialized() {\n    const unsubscribe = auth.onAuthStateChanged(user => {});\n    return unsubscribe;\n  }\n\n}\n\nexport default new AuthContext();","map":{"version":3,"sources":["C:/Users/JingHao Shen/Desktop/College/CSE115a/enrollable/src/contexts/AuthContext.ts"],"names":["auth","db","AuthContext","constructor","signup","email","password","createUserWithEmailAndPassword","catch","error","errorMessage","message","console","log","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","isInitialized","unsubscribe","onAuthStateChanged","user"],"mappings":"AAEA,SAASA,IAAT,EAAeC,EAAf,QAAyB,aAAzB;;AAGA,MAAMC,WAAN,CAAkB;AAIdC,EAAAA,WAAW,GAAE;AAAA,SAHbH,IAGa;AAAA,SAFbC,EAEa;AACT,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,EAAL,GAAUA,EAAV;AACH;;AAEDG,EAAAA,MAAM,CAACC,KAAD,EAAQC,QAAR,EAAiB;AACnB,WACI,KAAKN,IAAL,CAAUO,8BAAV,CAAyCF,KAAzC,EAAgDC,QAAhD,EACKE,KADL,CACYC,KAAD,IAAW;AACd,YAAMC,YAAY,GAAID,KAAK,CAACE,OAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACH,KAJL,CADJ;AAOH;;AAEDI,EAAAA,KAAK,CAACT,KAAD,EAAQC,QAAR,EAAiB;AAClB,WACI,KAAKN,IAAL,CAAUe,0BAAV,CAAqCV,KAArC,EAA4CC,QAA5C,EACKE,KADL,CACYC,KAAD,IAAW;AACd,YAAMC,YAAY,GAAID,KAAK,CAACE,OAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACH,KAJL,CADJ;AAOH;;AAEDM,EAAAA,MAAM,GAAG;AACL,WACI,KAAKhB,IAAL,CAAUiB,OAAV,GACKT,KADL,CACYC,KAAD,IAAW;AACd,YAAMC,YAAY,GAAID,KAAK,CAACE,OAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACH,KAJL,CADJ;AAOH;;AAEDQ,EAAAA,aAAa,CAACb,KAAD,EAAQ;AACjB,WACI,KAAKL,IAAL,CAAUmB,sBAAV,CAAiCd,KAAjC,EACKG,KADL,CACYC,KAAD,IAAW;AACd,YAAMC,YAAY,GAAID,KAAK,CAACE,OAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACH,KAJL,CADJ;AAOH,GA/Ca,CAiDd;AACA;AACA;AAEA;AACA;AACA;;;AAEAU,EAAAA,aAAa,GAAE;AACX,UAAMC,WAAW,GAAGrB,IAAI,CAACsB,kBAAL,CAAwBC,IAAI,IAAI,CAEnD,CAFmB,CAApB;AAIA,WAAOF,WAAP;AACH;;AA/Da;;AAkElB,eAAe,IAAInB,WAAJ,EAAf","sourcesContent":["import { resolve } from 'dns';\r\nimport React, {useContext, useState, useEffect} from 'react'\r\nimport { auth, db } from \"../firebase\";\r\nimport firebase from \"firebase/app\"\r\n\r\nclass AuthContext {\r\n    auth: firebase.auth.Auth\r\n    db: firebase.firestore.Firestore\r\n\r\n    constructor(){\r\n        this.auth = auth\r\n        this.db = db\r\n    }\r\n\r\n    signup(email, password){\r\n        return (\r\n            this.auth.createUserWithEmailAndPassword(email, password)\r\n                .catch((error) => {\r\n                    const errorMessage  = error.message \r\n                    console.log(errorMessage )\r\n                })\r\n        )\r\n    }\r\n\r\n    login(email, password){\r\n        return (\r\n            this.auth.signInWithEmailAndPassword(email, password)\r\n                .catch((error) => {\r\n                    const errorMessage  = error.message \r\n                    console.log(errorMessage )\r\n                })\r\n        )\r\n    }\r\n\r\n    logout() {\r\n        return (\r\n            this.auth.signOut()\r\n                .catch((error) => {\r\n                    const errorMessage  = error.message \r\n                    console.log(errorMessage )\r\n                })\r\n        )\r\n    }\r\n\r\n    resetPassword(email) {\r\n        return (\r\n            this.auth.sendPasswordResetEmail(email)\r\n                .catch((error) => {\r\n                    const errorMessage  = error.message \r\n                    console.log(errorMessage )\r\n                })\r\n        )\r\n    }\r\n\r\n    // updateEmail(email) {\r\n    //     return currentUser.updateEmail(email)\r\n    // }\r\n\r\n    // updatePassword(password) {\r\n    //     return currentUser.updatePassword(password)\r\n    // }\r\n\r\n    isInitialized(){\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            \r\n        })\r\n\r\n        return unsubscribe\r\n    }\r\n}\r\n\r\nexport default new AuthContext()"]},"metadata":{},"sourceType":"module"}